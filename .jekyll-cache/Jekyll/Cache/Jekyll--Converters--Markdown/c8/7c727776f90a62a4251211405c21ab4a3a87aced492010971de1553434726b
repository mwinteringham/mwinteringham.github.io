I"À(<p>After a bit of a break for the summer holiday, and as promised in <a href="http://www.mwtestconsultancy.co.uk/unexpected-automation-quickly-creating-test-data-in-mongodb/" title="Quickly creating test data in MongoDB"></a>Quickly creating test data in MongoDB&lt;/a&gt;, here is a look at how we can use the randomisation script script from <a href="http://www.mwtestconsultancy.co.uk/unexpected-automation-quickly-creating-test-data-in-mongodb/" title="Quickly creating test data in MongoDB"></a>Quickly creating test data in MongoDB&lt;/a&gt; to create a randomised HTTP payload for POST requests.</p>

<p>However, before we begin, letâ€™s refresh ourselves with the randomisation script:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Mark</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Mary</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Sally</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Jim</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Eric</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Susan</span><span class="dl">"</span><span class="p">]</span>
<span class="kd">var</span> <span class="nx">surname</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Jones</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Wilson</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Jackson</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Brown</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Smith</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Ericsson</span><span class="dl">"</span><span class="p">]</span>

<span class="kd">var</span> <span class="nx">randomiseNumber</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="k">from</span><span class="p">,</span> <span class="nx">to</span><span class="p">){</span>
  <span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="p">(</span><span class="nx">to</span> <span class="o">-</span> <span class="k">from</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span> <span class="o">+</span> <span class="k">from</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">randomiseDate</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">start</span><span class="p">,</span> <span class="nx">end</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">start</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span> <span class="o">+</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="p">(</span><span class="nx">end</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span> <span class="o">-</span> <span class="nx">start</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()));</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">latestDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
<span class="kd">var</span> <span class="nx">checkInDate</span> <span class="o">=</span> <span class="nx">randomiseDate</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="mi">2013</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span><span class="nx">latestDate</span><span class="p">)</span>

<span class="kd">var</span> <span class="nx">booking</span> <span class="o">=</span> <span class="p">{</span> 
  <span class="dl">"</span><span class="s2">firstname</span><span class="dl">"</span><span class="p">:</span> <span class="nx">name</span><span class="p">[</span><span class="nx">randomiseNumber</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">name</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)],</span> 
  <span class="dl">"</span><span class="s2">lastname</span><span class="dl">"</span><span class="p">:</span> <span class="nx">surname</span><span class="p">[</span><span class="nx">randomiseNumber</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">surname</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)],</span> 
  <span class="dl">"</span><span class="s2">totalprice</span><span class="dl">"</span><span class="p">:</span> <span class="nx">randomiseNumber</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span><span class="mi">1000</span><span class="p">),</span> 
  <span class="dl">"</span><span class="s2">depositpaid</span><span class="dl">"</span><span class="p">:</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">&gt;=</span> <span class="mf">0.5</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">bookingdates</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">checkin</span><span class="dl">"</span><span class="p">:</span> <span class="nx">checkInDate</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">checkout</span><span class="dl">"</span><span class="p">:</span> <span class="nx">randomiseDate</span><span class="p">(</span><span class="nx">checkInDate</span><span class="p">,</span><span class="nx">latestDate</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="k">if</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">&gt;=</span> <span class="mf">0.5</span><span class="p">){</span>
  <span class="nx">booking</span><span class="p">.</span><span class="nx">additionalneeds</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Breakfast</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">booking</span><span class="p">);</span>
</code></pre></div></div>

<h2>Creating a randomised JSON payload</h2>

<p>JSON is an extremely popular choice for payloads in HTTP requests and because of the earlier work on the script we can use it straight off the bat to create a JSON payload.  Simply take the output of the randomised data and use that in your POST request.</p>

<h2>Creating a randomised XML payload</h2>

<p>Another widely used content type for POST requests is XML.  But since the script only offers the ability to create data in JSON format we need to update it a bit to make it produce an XML payload.  One way would be to concatenate strings to build up an XML payload but that would be a lot of work ending in a very different (and probably messy looking) script and it may be desirable to have a script that can easily switch between JSON and XML creation.</p>

<p>Therefore, we are going to use the <a href="https://www.npmjs.com/package/js2xmlparser" title="js2xmlparser">js2xmlparser</a> library to convert the JSON into XML like so:</p>

<ul>
  <li>First download the library by running <code class="language-plaintext highlighter-rouge">npm install js2xmlparser</code> in the directory your script is saved.&lt;/li&gt;</li>
  <li>Add to the top of the script <code class="language-plaintext highlighter-rouge">var js2xmlparser = require("js2xmlparser");</code>&lt;/li&gt;</li>
  <li>Replace <code class="language-plaintext highlighter-rouge">console.log(booking)</code> at the bottom of the script with <code class="language-plaintext highlighter-rouge">console.log(js2xmlparser("booking", booking));</code>&lt;/li&gt;</li>
</ul>

<p>The js2xmlparser method takes two parameters:</p>
<ol>
<li>The first parameter determines the parent tag that the randomised data is injected into.  Since we are creating a booking we name it "booking".  (This might be a little confusing since the second parameter is named booking so try changing the name and observing what happens)</li>
<li>The second parameter takes the JSON object we have created and converts it into XML format</li>
</ol>

<p>Once you have it set up, give it a try.  You should end up with an output like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;booking&gt;
  &lt;firstname&gt;Eric&lt;/firstname&gt;
  &lt;lastname&gt;Wilson&lt;/lastname&gt;
  &lt;totalprice&gt;832&lt;/totalprice&gt;
  &lt;depositpaid&gt;false&lt;/depositpaid&gt;
    &lt;bookingdates&gt;
      &lt;checkin&gt;Fri Jun 28 2013 19:57:28 GMT+0100 (BST)&lt;/checkin&gt;
      &lt;checkout&gt;Sat Aug 09 2014 00:31:00 GMT+0100 (BST)&lt;/checkout&gt;
    &lt;/bookingdates&gt;
&lt;/booking&gt;
</code></pre></div></div>

<h3>Wrapping up</h3>

<p>With either of these solutions you can create a quick and easy script to produce a randomised payload that can then be dropped into your tool of choice.</p>
:ET